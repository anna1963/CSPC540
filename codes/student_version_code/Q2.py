# -*- coding: utf-8 -*-
"""Questions.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CoRSrMWpz7FprQXvCxkoRMbiF0A2pt6K
"""

import matplotlib.pyplot as plt
from sklearn import cluster
from sklearn import decomposition

from keras.datasets import fashion_mnist

import numpy as np

(train_X, train_y), (test_X, test_y) = fashion_mnist.load_data()

data = test_X - test_X.mean(axis = 0)
data = data.reshape(data.shape[0], -1)
data -= np.expand_dims(data.mean(axis=1), axis =1)

fig, axs = plt.subplots(2, 5,  figsize=(10, 6))
for i in range(5):
  for k in range(len(test_y)):
    if test_y[k] == i:
      data_ = test_X[k]
  axs[0][i].imshow(data_.reshape((28,28)), cmap=plt.cm.gray_r)
  axs[0][i].grid(False)
  axs[0][i].axis('off')
for i in range(5):
  for k in range(len(test_y)):
    if test_y[k] == i+5:
      data_ = test_X[k]
  axs[1][i].imshow(data_.reshape((28,28)), cmap=plt.cm.gray_r)
  axs[1][i].grid(False)
  axs[1][i].axis('off')

ica_estimator = decomposition.FastICA(
    n_components=10, max_iter=4000, whiten="arbitrary-variance", tol=15e-5, random_state = 10
) #TODO: Change random_state
ica_estimator.fit(test_X.reshape(test_X.shape[0], -1))

fig, axs = plt.subplots(2, 5,  figsize=(10, 6))
for i in range(5):
  axs[0][i].imshow(ica_estimator.components_[i].reshape((28,28)), cmap=plt.cm.gray_r)
  axs[0][i].grid(False)
  axs[0][i].axis('off')
  axs[0][i].set_title("IC"+str(i))
for i in range(5):
  axs[1][i].imshow(ica_estimator.components_[i+5].reshape((28,28)), cmap=plt.cm.gray_r)
  axs[1][i].grid(False)
  axs[1][i].axis('off')
  axs[1][i].set_title("IC"+str(i+5))

fa_estimator = decomposition.FactorAnalysis(n_components=10, max_iter=20)
fa_estimator.fit(test_X.reshape(test_X.shape[0], -1))

fig, axs = plt.subplots(2, 5,  figsize=(10, 6))
for i in range(5):
  axs[0][i].imshow(fa_estimator.components_[i].reshape((28,28)), cmap=plt.cm.gray_r)
  axs[0][i].grid(False)
  axs[0][i].axis('off')
  axs[0][i].set_title("PC(FA)"+str(i))
for i in range(5):
  axs[1][i].imshow(fa_estimator.components_[i+5].reshape((28,28)), cmap=plt.cm.gray_r)
  axs[1][i].grid(False)
  axs[1][i].axis('off')
  axs[1][i].set_title("PC(FA)"+str(i+5))

pca_estimator = decomposition.PCA(
    n_components=10
)
pca_estimator.fit(test_X.reshape(test_X.shape[0], -1))

fig, axs = plt.subplots(2, 5,  figsize=(10, 6))
for i in range(5):
  axs[0][i].imshow(pca_estimator.components_[i].reshape((28,28)), cmap=plt.cm.gray_r)
  axs[0][i].grid(False)
  axs[0][i].axis('off')
  axs[0][i].set_title("PC(PCA)"+str(i))
for i in range(5):
  axs[1][i].imshow(pca_estimator.components_[i+5].reshape((28,28)), cmap=plt.cm.gray_r)
  axs[1][i].grid(False)
  axs[1][i].axis('off')
  axs[1][i].set_title("PC(PCA)"+str(i+5))

